#!/bin/sh
# toughradius v2.0 install script
# author: jamiesun.net@gmail.com

rundir=/home/toughrun

usage ()
{
    cat <<EOF
    Usage: $0 [OPTIONS] instance

    docker_setup       install docker, docker-compose
    pull               toughradius docker images pull
    standalone         install toughradius with already exists mysql
    with_mysql         install toughradius with new docker mysql instance
    remove             uninstall toughradius and database
    status             toughradius instance status
    restart            toughradius instance restart
    stop               toughradius instance stop
    upgrade            toughradius instance upgrade
    logs               toughradius instance logs
    dsh                toughwlan instance bash term

    All other options are passed to the toughrad program.
EOF
        exit 1
}


with_mysql()
{
    instance=${1:-toughradius}

    mkdir -p ${rundir}/$instance

    read -p "mysql user [raduser]: " mysql_user
    mysql_user=${mysql_user:-raduser}

    read -p "mysql user password [radpwd]: " mysql_password
    mysql_password=${mysql_password:-radpwd}

    read -p "mysql database [radiusd]: " mysql_database
    mysql_database=${mysql_database:-radiusd}

    read -p "mysql root password [radroot]: " mysql_root_password
    mysql_root_password=${mysql_root_password:-radroot}

    read -p "toughradius web port [1816]: " web_port
    web_port=${web_port:-1816}

    read -p "toughradius auth port [1812]: " auth_port
    auth_port=${auth_port:-1812}

    read -p "toughradius acct port [1813]: " acct_port
    acct_port=${acct_port:-1813}

    cat <<EOF

    ToughRADIUS instance config(with mysql):

    instance name: $instance
    mysql_user: ${mysql_user}
    mysql_password: ${mysql_password}
    mysql_database: ${mysql_database}
    mysql_root_password: ${mysql_root_password}
    web_port: ${web_port}
    auth_port: ${auth_port}
    acct_port: ${acct_port}

EOF

    rm -f ${rundir}/$instance/docker-compose.yml
    cat > ${rundir}/$instance/docker-compose.yml <<EOF
raddb:
    container_name: raddb_${instance}
    image: "index.alauda.cn/toughstruct/mysql"
    privileged: true
    expose:
        - "3306"
    environment:
        - MYSQL_USER=$mysql_user
        - MYSQL_PASSWORD=$mysql_password
        - MYSQL_DATABASE=$mysql_database
        - MYSQL_ROOT_PASSWORD=$mysql_root_password
    restart: always
    volumes:
        - ${rundir}/$instance/trmysql:/var/lib/mysql

radius:
    container_name: radius_${instance}
    image: "index.alauda.cn/toughstruct/toughradius:v2"
    ports:
        - "${web_port}:1816"
        - "${auth_port}:1812/udp"
        - "${acct_port}:1813/udp"
    links:
        - raddb:raddb
    environment:
        - DB_TYPE=mysql
        - DB_URL=mysql://$mysql_user:$mysql_password@raddb:3306/$mysql_database?charset=utf8
    restart: always
    volumes:
        - ${rundir}/$instance:/var/toughradius
EOF

    cd ${rundir}/$instance

    cat ${rundir}/$instance/docker-compose.yml

    docker-compose up -d raddb

    echo 3
    sleep 1
    echo 2
    sleep 1
    echo 1
    sleep 1

    docker-compose up -d radius

    docker-compose ps

    exit 0
}

standalone()
{
    instance=${1:-toughradius}

    mkdir -p ${rundir}/$instance

    read -p "mysql host (must): " mysql_host
    if [ -z $mysql_host ]; then
        echo "mysql host is empty"
        exit 1
    fi

    read -p "mysql user [raduser]: " mysql_user
    mysql_user=${mysql_user:-raduser}

    read -p "mysql user password [radpwd]: " mysql_password
    mysql_password=${mysql_password:-radpwd}

    read -p "mysql database [radiusd]: " mysql_database
    mysql_database=${mysql_database:-radiusd}

    read -p "mysql root password [radroot]: " mysql_root_password
    mysql_root_password=${mysql_root_password:-radroot}

    read -p "toughradius web port [1816]: " web_port
    web_port=${web_port:-1816}

    read -p "toughradius auth port [1812]: " auth_port
    auth_port=${auth_port:-1812}

    read -p "toughradius acct port [1813]: " acct_port
    acct_port=${acct_port:-1813}

    cat <<EOF

    ToughRADIUS instance config(standalone):

    instance name: $instance
    mysql_host: ${mysql_host}
    mysql_user: ${mysql_user}
    mysql_password: ${mysql_password}
    mysql_database: ${mysql_database}
    mysql_root_password: ${mysql_root_password}
    web_port: ${web_port}
    auth_port: ${auth_port}
    acct_port: ${acct_port}

EOF

    rm -f ${rundir}/$instance/docker-compose.yml
    cat > ${rundir}/$instance/docker-compose.yml  <<EOF
radius:
    container_name: radius_${instance}
    image: "index.alauda.cn/toughstruct/toughradius:v2"
    ports:
        - "${web_port}:1816"
        - "${auth_port}:1812/udp"
        - "${acct_port}:1813/udp"
    environment:
        - DB_TYPE=mysql
        - DB_URL=mysql://$mysql_user:$mysql_password@$mysql_host:3306/$mysql_database?charset=utf8
    restart: always
    volumes:
        - ${rundir}/$instance:/var/toughradius
EOF

    cd ${rundir}/$instance

    cat ${rundir}/$instance/docker-compose.yml

    docker-compose up -d

    docker-compose ps

    exit 0
}


docker_setup()
{
    curl -sSL https://get.daocloud.io/docker | sh

    curl -L https://get.daocloud.io/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose

    ln -s /usr/local/bin/docker-compose /usr/local/bin/docp
}

remove()
{
    instance=${1:-toughradius}

    cd ${rundir}/$instance
    read -p "remove database [y/n](n): " rmdata
    rmdata=${rmdata:-n}
    if [ $rmdata == "y" ]; then
        echo "${rundir}/$instance rm database"
        docker-compose kill raddb
        docker-compose rm raddb
        rm -fr ${rundir}/$instance/trmysql
    fi 
    
    docker-compose kill radius
    docker-compose rm radius
    rm -f ${rundir}/$instance/.install
}


status()
{
    instance=${1:-toughradius}    
    cd ${rundir}/$instance
    docker-compose ps
}

restart()
{
    instance=${1:-toughradius}    
    cd ${rundir}/$instance
    docker-compose restart
    docker-compose ps
}

stop()
{
    instance=${1:-toughradius}    
    cd ${rundir}/$instance
    docker-compose stop
    docker-compose ps
}

upgrade()
{
    instance=${1:-toughradius}    
    cd ${rundir}/$instance
    docker exec -it radius_$instance /usr/local/bin/toughrun upgrade
    docker-compose restart radius
    docker-compose ps
}

uplib()
{
    instance=${1:-toughradius}    
    cd ${rundir}/$instance
    docker exec -it radius_$instance /usr/local/bin/toughrun uplib
    docker-compose restart radius
    docker-compose ps
}

logs()
{
    instance=${1:-toughradius}
    cd ${rundir}/$instance
    docker-compose logs
}

dsh()
{
    instance=${1:-toughwlan}    
    cd ${rundir}/$instance
    docker exec -it radius_$instance bash
}


pull()
{
    docker pull index.alauda.cn/toughstruct/mysql
    docker pull index.alauda.cn/toughstruct/toughradius:v2
}


case "$1" in

  docker_setup)
    docker_setup
  ;;

  standalone)
    standalone $2
  ;;

  with_mysql)
    with_mysql $2
  ;;

  remove)
    remove $2
  ;;

  status)
    status $2
  ;;

  restart)
    restart $2
  ;;

  stop)
    stop $2
  ;;

  logs)
    logs $2
  ;;

  dsh)
    dsh $2
  ;;

  pull)
    pull
  ;;

  upgrade)
    upgrade
  ;;

  uplib)
    uplib
  ;;


  *)
   usage
  ;;

esac